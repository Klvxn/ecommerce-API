# Generated by Django 5.0.6 on 2025-02-16 00:09

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("catalogue", "0084_remove_offer_claimed_by_and_more"),
        ("stores", "0005_alter_store_followers"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Offer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField()),
                ("title", models.CharField(max_length=50)),
                (
                    "target",
                    models.CharField(
                        choices=[
                            ("Product", "The offer is applicable to specific products"),
                            (
                                "Order",
                                "Applicable to the customer's whole order e.g. Offers with MOV",
                            ),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("Free shipping", "Free shipping"),
                            (
                                "Percentage discount",
                                "A certain percentage off of a product's price",
                            ),
                            (
                                "Fixed discount",
                                "A fixed amount off of a product's price",
                            ),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "discount_value",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("requires_voucher", models.BooleanField(default=False)),
                (
                    "total_discount_offered",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                    ),
                ),
                (
                    "claimed_by",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
                (
                    "store",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="stores.store",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CategoryOffer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category_offers",
                        to="catalogue.category",
                    ),
                ),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="discount.offer"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OfferCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "condition_type",
                    models.CharField(
                        choices=[
                            ("specific_products", "Specific Products"),
                            ("specific_categories", "Specific Categories"),
                            ("customer_groups", "Customer Groups"),
                            ("min_order_value", "Minimum Order Value"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "min_order_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Specify the minimum order amount required for offers to be applicable",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "eligible_customers",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("first_time_buyers", "First Time Buyers"),
                            ("all_customers", "All Customers"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "eligible_categories",
                    models.ManyToManyField(
                        blank=True,
                        through="discount.CategoryOffer",
                        to="catalogue.category",
                    ),
                ),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conditions",
                        to="discount.offer",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="categoryoffer",
            name="condition",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="discount.offercondition",
            ),
        ),
        migrations.CreateModel(
            name="ProductOffer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "condition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="discount.offercondition",
                    ),
                ),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="discount.offer"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_offers",
                        to="catalogue.product",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="offercondition",
            name="eligible_products",
            field=models.ManyToManyField(
                blank=True, through="discount.ProductOffer", to="catalogue.product"
            ),
        ),
        migrations.CreateModel(
            name="Voucher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField()),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("code", models.CharField(db_index=True, max_length=50, unique=True)),
                (
                    "usage_type",
                    models.CharField(
                        choices=[
                            ("single", "Can only be used once"),
                            ("multiple", "Can be used multiple number of times"),
                            (
                                "once per customer",
                                "Can be used once for every customer",
                            ),
                        ],
                        default="once per customer",
                        max_length=50,
                    ),
                ),
                ("max_usage_limit", models.PositiveIntegerField()),
                ("num_of_usage", models.PositiveIntegerField(blank=True, default=0)),
                (
                    "offer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="discount.offer"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RedeemedVoucher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_redeemed", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "voucher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="discount.voucher",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(
                fields=["valid_from", "valid_to"], name="discount_of_valid_f_e2b9e3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="offer",
            index=models.Index(fields=["store"], name="discount_of_store_i_3fa8eb_idx"),
        ),
        migrations.AddIndex(
            model_name="voucher",
            index=models.Index(fields=["code"], name="discount_vo_code_038bce_idx"),
        ),
        migrations.AddIndex(
            model_name="voucher",
            index=models.Index(
                fields=["valid_from", "valid_to"], name="discount_vo_valid_f_953ae8_idx"
            ),
        ),
    ]
